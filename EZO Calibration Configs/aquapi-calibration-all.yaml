substitutions:
  # names
  name: "aquapi"
  friendly_name: "AquaPi"

  # App Version - Updated: 8/2023
  appVersion: "0.1c"

  # pins
  sdaPin: "21"
  sclPin: "22"
  
  # EZO Circuit Addresses
  # pH circuit, who's address is 99
  addPH: "99"
  # EC circuit, who's address is 100
  addEC: "100"
  # DO circuit, who's address is 97
  addDO: "97"
  # RTD circuit, who's address is 102
  addRTD: "102"
  # PMP circuit, who's address is 103
  addPMP: "103"
  # HUM circuit, who's address is 111
  addHUM: "111"
  # CO2 circuit, who's address is 105
  addCO2: "105"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  name_add_mac_suffix: true
  project:
    name: TheRealFalseReality.aquapi
    version: "${appVersion}"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: verbose

# Enable Home Assistant API
api:

ota:

wifi:
  ap:

captive_portal:

web_server:

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none
  
improv_serial:

# i2c Pins
i2c:
  sda: ${sdaPin}
  scl: ${sclPin}
  scan: true
  id: bus_a

# Internal Blue LED
light:
  - platform: status_led
    # name: "Internal LED"
    pin: GPIO2
    id: internal_led
    # entity_category: "Config"
    
sensor:
  # Internal Temp.
  - platform: internal_temperature
    name: "Internal Temperature"

  # Wifi Signal 
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  # Wifi %
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"

  # Uptime sensor
  - platform: uptime
    name: Uptime

  # EZO Circuits (yellow - SCL/RX, blue - SDA/TX)
  # EZO Circuit - pH
  - platform: ezo
    icon: mdi:ph
    name: "pH"
    id: ph_ezo
    address: ${addPH}
    unit_of_measurement: ""
    accuracy_decimals: 2
    update_interval: 1s
    state_class: "measurement"

  # EZO Circuit - EC
  # Salinity
  - platform: ezo
    icon: mdi:shaker-outline
    name: "Salinity"
    id: ec_ezo
    address: ${addEC}
    unit_of_measurement: "ppt"
    accuracy_decimals: 2
    update_interval: 1s
    state_class: "measurement"

  # Specific Gravity
  - platform: copy 
    source_id: ec_ezo
    name: "Specific Gravity"
    filters:
      - lambda: return x;
    unit_of_measurement: ""
    accuracy_decimals: 3
    state_class: "measurement"

  # Conductivity
  - platform: copy 
    source_id: ec_ezo
    name: "Specific Gravity"
    icon: mdi:flash
    filters:
      - lambda: return x;
    unit_of_measurement: "μS/cm"
    accuracy_decimals: 3
    state_class: "measurement"

  # EZO Circuit - RTD
  # Temperature
  - platform: ezo
    icon: mdi:thermometer-lines
    name: "Temperature"
    id: rtd_ezo
    address: ${addRTD}
    # unit_of_measurement: "°C"
    accuracy_decimals: 2
    update_interval: 1s
    state_class: "measurement"
    device_class: "temperature"

  # EZO Circuit - HUM
  # Humidity
  - platform: ezo
    icon: mdi:water-percent
    name: "Humidity"
    id: hum_ezo
    address: ${addHUM}
    # unit_of_measurement: "%"
    accuracy_decimals: 2
    update_interval: 1s
    state_class: "measurement"
    device_class: "humidity"

  # EZO Circuit - CO2
  # Cardbon Dioxide
  - platform: ezo
    icon: mdi:molecule-co2
    name: "Cardbon Dioxide"
    id: co2_ezo
    address: ${addCO2}
    # unit_of_measurement: "ppm"
    accuracy_decimals: 2
    update_interval: 1s
    state_class: "measurement"
    device_class: "carbon_dioxide"

  # EZO Circuit - Dissolved Oxygen
  - platform: ezo
    icon: mdi:molecule
    name: "Dissolved Oxygen"
    id: do_ezo
    address: ${addDO}
    unit_of_measurement: "mg/L"
    accuracy_decimals: 2
    update_interval: 1s
    state_class: "measurement"

  # EZO Circuit - Pump
  - platform: ezo
    icon: mdi:pump
    name: "Pump"
    id: pmp_ezo
    address: ${addPMP}
    unit_of_measurement: ""
    accuracy_decimals: 2
    update_interval: 1s
    state_class: "measurement"

binary_sensor:

text_sensor: 
  # AquaPi Version
  - platform: template
    name: "AquaPi Version"
    id: aquapi_version
    icon: mdi:cellphone-arrow-down
    update_interval: 600s
    lambda: |-
      return {"${appVersion}"};
    entity_category: "diagnostic"

  - platform: wifi_info
    ip_address:
      name: IP Address
      icon: mdi:ip-network
    ssid:
      name: Connected SSID
      icon: mdi:wifi-star
    bssid:
      name: Connected BSSID
      icon: mdi:wifi-star
    mac_address:
      name: Mac Address
      icon: mdi:chip

button:
  # Soft Restart
  - platform: restart
    name: "Restart"

  # EC
  # Output Parameters
  # Output Salinity
  - platform: template
    name: "EC - Output - Salinity"
    id: ec_sal
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,0");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,1");
            id(ec_ezo).send_custom("O,SG,0");
    entity_category: "Config"
            
  # Output Specific Gravity
  - platform: template
    name: "EC - Output - Specific Gravity"
    id: ec_sg
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,0");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,0");
            id(ec_ezo).send_custom("O,SG,1");
    entity_category: "Config"

  # Output Conductivity
  - platform: template
    name: "EC - Output - Conductivity"
    id: ec_cond
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,1");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,0");
            id(ec_ezo).send_custom("O,SG,0");
    entity_category: "Config"

  # Calibrate the DO probe to Air
  - platform: template
    name: "DO - Calibration - Air"
    id: do_cal_air
    on_press:
      then:
        - lambda: |-
            id(do_ezo).send_custom("cal");

  # Calibrate the DO probe to 0
  - platform: template
    name: "DO - Calibration - 0"
    id: do_cal_0
    on_press:
      then:
        - lambda: |-
            id(do_ezo).send_custom("cal,0");

  # Perform Calibration CLEAR
  - platform: template
    name: "DO - Calibration Clear"
    id: do_cal_clear
    on_press:
      then:
        - lambda: |-
            id(do_ezo).clear_calibration();

  # Perform Calibration Check
  - platform: template
    name: "DO - Calibration - check"
    id: do_cal_check
    on_press:
      then:
        - lambda: |-
            id(do_ezo).get_calibration();

  # Perform Status Check
  - platform: template
    name: "DO - Staus Check"
    id: do_status
    on_press:
      then:
        - lambda: |-
            id(do_ezo).send_custom("Status");

  # Get Device Firmware Version
  - platform: template
    name: "DO - Get Information"
    id: do_info
    on_press:
      then:
        - lambda: |-
            id(do_ezo).get_device_information();

  # Manual Read
  - platform: template
    name: "DO - Manual Read"
    id: do_read
    on_press:
      then:
        - lambda: |-
            id(do_ezo).get_state();
            
  # Output TDS
  - platform: template
    name: "EC - Output - TDS"
    id: ec_tds
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,0");
            id(ec_ezo).send_custom("O,TDS,1");
            id(ec_ezo).send_custom("O,S,0");
            id(ec_ezo).send_custom("O,SG,0");

  # Get Device Firmware Version
  - platform: template
    name: "EC - Get Information"
    id: ec_info
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).get_device_information();

  # Set Probe Type K1
  - platform: template
    name: "EC - Set Probe Type K1"
    id: ec_probe_type
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("K,1");

  # Get Probe Value
  - platform: template
    name: "EC - Get Probe Value"
    id: ec_probe_value
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("K,?");

  # Manual Read
  - platform: template
    name: "EC - Manual Read"
    id: ec_read
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).get_state();

  # Perform Calibration 0.00
  - platform: template
    name: "EC - Calibration - 0"
    id: ec_cal_0
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).set_calibration_generic(0.00);

  # Perform Calibration low 12880
  - platform: template
    name: "EC - Calibration - low 12880"
    id: ec_cal_low
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).set_calibration_point_low(12880.00);

  # Perform Calibration high 80000
  - platform: template
    name: "EC - Calibration - high 80000"
    id: ec_cal_high
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).set_calibration_point_high(80000.00);

  # Perform Calibration CLEAR
  - platform: template
    name: "EC - Calibration Clear"
    id: ec_cal_clear
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).clear_calibration();

  # Perform Calibration Check
  - platform: template
    name: "EC - Calibration - check"
    id: ec_cal_check
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).get_calibration();

  # Perform Status Check
  - platform: template
    name: "EC - Staus Check"
    id: ec_status
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("Status");

  # Get TDS Value
  - platform: template
    name: "EC - TDS Value"
    id: ec_tds_value
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("TDS,?");

  # Output Values
  # Get Enabled Parameter(s)
  - platform: template
    name: "EC - Get Enabled Parameter(s)"
    id: ec_param
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,?");

  # pH
  # Get Device Firmware Version
  - platform: template
    name: "pH - Get Information"
    id: ph_info
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).get_device_information();

  # Get Slope
  - platform: template
    name: "pH - Get Slope"
    id: ph_slope
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).get_slope();

  # Manual Read
  - platform: template
    name: "pH - Manual Read"
    id: ph_read
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).get_state();

  # Perform Calibration - mid 7
  - platform: template
    name: "pH - Calibration - mid 7"
    id: ph_cal_mid
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).set_calibration_point_mid(7.00);

  # Perform Calibration low 4
  - platform: template
    name: "pH - Calibration - low 4"
    id: ph_cal_low
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).set_calibration_point_low(4.00);

  # Perform Calibration high 10
  - platform: template
    name: "pH - Calibration - high 10"
    id: ph_cal_high
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).set_calibration_point_high(10.00);

  # Perform Calibration CLEAR
  - platform: template
    name: "pH - Calibration Clear"
    id: ph_cal_clear
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).clear_calibration();

  # Perform Calibration Check
  - platform: template
    name: "pH - Calibration - check"
    id: ph_cal_check
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).get_calibration();

  # Perform Status Check
  - platform: template
    name: "pH - Staus Check"
    id: ph_status
    on_press:
      then:
        - lambda: |-
            id(ph_ezo).send_custom("Status");

  # Calibrate the temp probe to 100C or Boiling
  - platform: template
    name: "RTD - Calibration - 100C (Boiling)"
    id: rtd_cal_100
    on_press:
      then:
        - lambda: |-
            id(rtd_ezo).send_custom("cal,100");

  # Perform Calibration CLEAR
  - platform: template
    name: "RTD - Calibration Clear"
    id: rtd_cal_clear
    on_press:
      then:
        - lambda: |-
            id(rtd_ezo).clear_calibration();

  # Perform Calibration Check
  - platform: template
    name: "RTD - Calibration - check"
    id: rtd_cal_check
    on_press:
      then:
        - lambda: |-
            id(rtd_ezo).get_calibration();

  # Perform Status Check
  - platform: template
    name: "RTD - Staus Check"
    id: rtd_status
    on_press:
      then:
        - lambda: |-
            id(rtd_ezo).send_custom("Status");

  # Get Device Firmware Version
  - platform: template
    name: "RTD - Get Information"
    id: rtd_info
    on_press:
      then:
        - lambda: |-
            id(rtd_ezo).get_device_information();

  # Manual Read
  - platform: template
    name: "RTD - Manual Read"
    id: rtd_read
    on_press:
      then:
        - lambda: |-
            id(rtd_ezo).get_state();
