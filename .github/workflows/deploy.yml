# Name of your workflow
name: Deploy Next.js to GitHub Pages

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-deploy"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Sets up Node.js in the runner
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a Node.js version compatible with your project
          cache: 'npm'
          # Specify the path to your lock file for better caching
          cache-dependency-path: assets/apps/fishcompatedit/package-lock.json

      # 3. Installs your project's dependencies
      - name: Install Dependencies
        run: npm install
        # **This is the key change: specifies the directory to run the command in**
        working-directory: ./assets/apps/fishcompatedit

      # 4. Builds your Next.js application for static export
      - name: Build Project
        run: npm run build
        # **Run the build command in the same directory**
        working-directory: ./assets/apps/fishcompatedit

      # 5. Adds a .nojekyll file to the output directory
      - name: Add .nojekyll file
        run: touch ./out/.nojekyll
        # **Run this command in the same directory**
        working-directory: ./assets/apps/fishcompatedit

      # 6. Deploys the built site to the gh-pages branch
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # **Update the publish directory to point to the correct 'out' folder**
          publish_dir: ./assets/apps/fishcompatedit/out
