blueprint:
  name: Toggle heater and chiller based on temperature (Number Sensor).
  description: This automation blueprint will turn devices on or off when the selected
    temperature sensor is above or below a certain temperature via another number
    sensor.
  domain: automation
  source_url: https://gist.github.com/TheRealFalseReality/6c32a74a75f9aa687bafdd8d2090ad5a
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed
      default: []
      selector:
        condition: {}
    sensorTemperature:
      name: Temperature Sensor
      description: The sensor that detects temperature.
      selector:
        entity:
          domain:
          - sensor
          multiple: false
    coolTemperature:
      name: Cool Temperature
      description: Toggles devices when below this value.
      selector:
        entity:
          domain:
          - number
          multiple: false
    warmTemperature:
      name: Warm Temperature
      description: Toggles devices when above this value.
      selector:
        entity:
          domain:
          - number
          multiple: false
    switchCoolOn:
      name: Cool Switch ON
      description: Switch(es) to turn ON when Temperature Sensor is below Cool Temperature's
        value.
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchCoolOff:
      name: Cool Switch OFF
      description: Switch(es) to turn OFF when Temperature Sensor is below Cool Temperature's
        value.
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchWarmOn:
      name: Warm Switch ON
      description: Switch(es) to turn ON when Temperature Sensor is above Warm Temperature's
        value.
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchWarmOff:
      name: Warm Switch OFF
      description: Switch(es) to turn OFF when Temperature Sensor is above Warm Temperature's
        value.
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
variables:
  condition: !input condition
  sensorTemperature: !input sensorTemperature
  coolTemperature: !input coolTemperature
  warmTemperature: !input warmTemperature
  switchCoolOn: !input switchCoolOn
  switchCoolOff: !input switchCoolOff
  switchWarmOn: !input switchWarmOn
  switchWarmOff: !input switchWarmOff
trigger:
- platform: numeric_state
  entity_id: !input sensorTemperature
  above: !input warmTemperature
- platform: numeric_state
  entity_id: !input sensorTemperature
  below: !input coolTemperature
condition: []
action:
- choose:
  - conditions:
    - condition: numeric_state
      entity_id: !input sensorTemperature
      above: !input warmTemperature
    sequence:
    - service: switch.turn_on
      metadata: {}
      data: {}
      entity_id: !input switchWarmOn
    - service: switch.turn_off
      metadata: {}
      data: {}
      entity_id: !input switchWarmOff
  - conditions:
    - condition: numeric_state
      entity_id: !input sensorTemperature
      below: !input coolTemperature
    sequence:
    - service: switch.turn_off
      metadata: {}
      data: {}
      entity_id: !input switchCoolOff
    - service: switch.turn_on
      metadata: {}
      data: {}
      entity_id: !input switchCoolOn
mode: single
