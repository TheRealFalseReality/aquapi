blueprint:
  name: Aquarium - Dosing Volume
  description: Turn on a switch to activate doser equipment for a certain amount of
    time based on volume and given dose rate. [More Info](https://community.home-assistant.io/t/aquarium-turn-on-a-switch-to-activate-doser-equipment-for-a-certain-amount-of-volume-or-time/600546)
    (v1.3) [Script]
  domain: script
  source_url: https://gist.github.com/TheRealFalseReality/be626c89dfe26fdf4c13b05498a5b8c6
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed
      default: []
      selector:
        condition: {}
    doseName:
      name: Dose Name*
      description: Name of what you are dosing (ex. Marine Trace).
      selector:
        text: {}
    doseSwitch:
      name: Doser Switch*
      description: Switch that activates the Doser Equipment.
      selector:
        target:
          entity:
          - domain:
            - switch
    doseRate:
      description: Calibrated dosing rate of doser equipment (in mL/min). BRS 2-part
        doser is 1.1 mL/min.
      name: Dosing Rate (mL/min)
      default: 1.1
      selector:
        number:
          min: 0.1
          max: 105.0
          unit_of_measurement: mL/min
          mode: box
          step: 0.1
    doseAmount:
      description: Amount to dose (in mL).
      name: Dosing Amount (mL)
      default: 10
      selector:
        number:
          min: 0.5
          max: 100.0
          unit_of_measurement: mL
          mode: box
          step: 0.1
    additional_actions:
      name: Additional Actions
      description: "Add additional actions to the script. Will execute before everything
        else.\nVariables: doseName, condition, doseSwitch, doseRate, doseAmount, doseTime,
        notify_title, notify_message, notify_title_fail, notify_message_fail.\n- Example:
        To send to Mobile Device using the official Home Assistant App:\n\n  Notifications
        -> Send a notification via mobile.YOUR_DEVICE_NAME\n  ```\n  service: notify.YOUR_DEVICE_NAME\n
        \ metadata: {}\n  data:\n    message: \"{{ notify_message }}\"\n    title:
        \"{{ notify_title }}\"\n  ```\n\n  i.e.: copy {{ notify_message }} into `message`.
        This will switch to \"yaml\" mode. Above is a completed example.\n"
      default: []
      selector:
        action: {}
variables:
  condition: !input condition
  doseName: !input doseName
  doseSwitch: !input doseSwitch
  doseRate: !input doseRate
  doseAmount: !input doseAmount
  doseTime: '{{ doseAmount / doseRate }}'
  notify_title: '{{ doseName }}'
  notify_message: 'Dosing {{ doseAmount }}mL of {{ doseName }}. Duration: {{ (doseTime
    | float * 60) | int // 3600 }}:{{ (doseTime | float * 60) | int % 3600 // 60 }}:{{
    (doseTime | float * 60) | int % 60 }}.'
  notify_title_fail: '{{ doseName }} Failed'
  notify_message_fail: "Failed to dose {{ doseName }} due to conditions not passing.\n
    Conditions: {{ condition }}"
  additional_actions: !input additional_actions
sequence:
- if:
  - condition: !input condition
  then:
  - choose: []
    default: !input additional_actions
  - service: notify.persistent_notification
    data:
      message: '{{ notify_message }}'
      title: '{{ notify_title }}'
  - service: switch.turn_on
    data: {}
    target: !input doseSwitch
  - delay:
      hours: 0
      minutes: '{{ doseTime }}'
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    data: {}
    target: !input doseSwitch
  else:
  - service: notify.persistent_notification
    data:
      message: '{{ notify_message_fail }}'
      title: '{{ notify_title_fail }}'
mode: restart
