blueprint:
  name: Aquarium - Toggle Switches Based on Temperature
  description: This automation blueprint will turn switches on or off when the selected
    temperature sensor is above or below a certain value. (v1.1) [Automation]
  domain: automation
  source_url: https://gist.github.com/TheRealFalseReality/9788b2f9ba2e5e51a05bd081441314d3
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed
      default: []
      selector:
        condition: {}
    sensorTemperature:
      name: Temperature Sensor
      description: The sensor that detects temperature.
      selector:
        entity:
          domain:
          - sensor
          multiple: false
    coolTemperature:
      name: Cool Temperature
      description: Toggles devices when below this value.
      default: 74
      selector:
        number:
          min: 60.0
          max: 80.0
          unit_of_measurement: °F
          mode: slider
          step: 1.0
    warmTemperature:
      name: Warm Temperature
      description: Toggles devices when above this value.
      default: 84
      selector:
        number:
          min: 70.0
          max: 90.0
          unit_of_measurement: °F
          mode: slider
          step: 1.0
    switchCoolOn:
      name: Cool Switch ON
      description: 'Switch(es) to turn ON when Temperature Sensor is below Cool Temperature''s
        value.

        Typically a Heater'
      default: []
      selector:
        target:
          entity:
          - domain:
            - switch
    switchCoolOff:
      name: Cool Switch OFF
      description: 'Switch(es) to turn OFF when Temperature Sensor is below Cool Temperature''s
        value.

        Typically a Chiller'
      default: []
      selector:
        target:
          entity:
          - domain:
            - switch
    switchWarmOn:
      name: Warm Switch ON
      description: 'Switch(es) to turn ON when Temperature Sensor is above Warm Temperature''s
        value.

        Typically a Chiller'
      default: []
      selector:
        target:
          entity:
          - domain:
            - switch
    switchWarmOff:
      name: Warm Switch OFF
      description: 'Switch(es) to turn OFF when Temperature Sensor is above Warm Temperature''s
        value.

        Typically a Heater'
      default: []
      selector:
        target:
          entity:
          - domain:
            - switch
    additional_actions:
      name: Additional Actions
      description: Add additional actions to the script. Will execute before everything
        else.
      default: []
      selector:
        action: {}
variables:
  condition: !input condition
  sensorTemperature: !input sensorTemperature
  coolTemperature: !input coolTemperature
  warmTemperature: !input warmTemperature
  switchCoolOn: !input switchCoolOn
  switchCoolOff: !input switchCoolOff
  switchWarmOn: !input switchWarmOn
  switchWarmOff: !input switchWarmOff
  additional_actions: !input additional_actions
trigger:
- platform: state
  entity_id: !input sensorTemperature
condition: []
action:
- if:
  - condition: !input condition
  then:
  - choose: []
    default: !input additional_actions
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: !input sensorTemperature
        above: !input warmTemperature
      sequence:
      - service: switch.turn_on
        data: {}
        target: !input switchWarmOn
      - service: switch.turn_off
        data: {}
        target: !input switchWarmOff
    - conditions:
      - condition: numeric_state
        entity_id: !input sensorTemperature
        below: !input coolTemperature
      sequence:
      - service: switch.turn_off
        data: {}
        target: !input switchCoolOff
      - service: switch.turn_on
        data: {}
        target: !input switchCoolOn
mode: restart
