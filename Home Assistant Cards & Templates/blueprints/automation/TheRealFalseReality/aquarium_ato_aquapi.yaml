blueprint:
  name: 'Aquarium - AquaPi: ATO Automation'
  description: Create an ATO (Automated-Top-Off) Automation. Turn on Water Pump when
    water level is Low, and stop when level is Normal or High. [More Info](https://community.home-assistant.io/t/aquarium-create-ato-automation-control-switches-based-off-a-sensor/600941)
    (v1.8) [Automation]
  domain: automation
  source_url: https://gist.github.com/TheRealFalseReality/eab1edda7c678b8763ecdcddb45f2f1a
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed
      default: []
      selector:
        condition: {}
    sensor:
      name: Water Sensor
      description: Sensor used to detect water level.
      selector:
        entity:
          filter:
          - domain:
            - sensor
            integration: esphome
          multiple: false
    switch:
      name: Water Pump
      description: Switch to turn on Water Pump to refill to normal level.
      selector:
        entity:
          filter:
          - domain:
            - switch
          multiple: false
    delay_on:
      name: On Delay
      description: Water Pump on Low delay.
      default:
        seconds: 30
      selector:
        duration: {}
    delay_high:
      name: High Delay
      description: Water Pump on High delay.
      default: 0
      selector:
        duration: {}
    normal_time:
      name: Normal Off Delay
      description: Time delay when water level is Normal to turn off pump, helps prevent
        frequent refills.
      default: 0
      selector:
        duration: {}
    pump_max_time:
      name: Water Pump Max On Time
      description: Turn off water pump if exceeds a certain time to prevent over-flow.
      default:
        minutes: 5
      selector:
        duration: {}
    additional_actions:
      name: Additional Actions
      description: Add additional actions to the script. Will execute before everything
        else, each time the automation is triggered.
      default: []
      selector:
        action: {}
variables:
  condition: !input condition
  sensor: !input sensor
  switch: !input switch
  delay_on: !input delay_on
  delay_high: !input delay_high
  normal_time: !input normal_time
  pump_max_time: !input pump_max_time
  additional_actions: !input additional_actions
alias: Aquarium - ATO Trigger
description: Control ATO Equipment
trigger:
- platform: state
  entity_id: !input sensor
  to: Low
  for: !input delay_on
- platform: state
  entity_id: !input sensor
  to: High
  for: !input delay_high
- platform: state
  entity_id: !input sensor
  to: Normal
  for: !input normal_time
- platform: state
  entity_id: !input switch
  to: 'on'
  for: !input pump_max_time
- platform: state
  entity_id: !input switch
  to: 'on'
  for: '{{ pump_max_time * 1.5 }}'
- platform: state
  entity_id: !input switch
  to: 'on'
  for: '{{ pump_max_time * 2 }}'
- platform: state
  entity_id: !input switch
  to: 'on'
  for: '{{ pump_max_time * 2.5 }}'
- platform: state
  entity_id: !input switch
  to: 'on'
  for: '{{ pump_max_time * 3 }}'
action:
- if:
  - condition: !input condition
  then:
  - choose: []
    default: !input additional_actions
  - if:
    - condition: and
      conditions:
      - condition: state
        entity_id: !input sensor
        state: Low
      - condition: state
        entity_id: !input switch
        state: 'off'
    then:
    - service: switch.turn_on
      entity_id: !input switch
    else:
    - service: switch.turn_off
      entity_id: !input switch
mode: single
