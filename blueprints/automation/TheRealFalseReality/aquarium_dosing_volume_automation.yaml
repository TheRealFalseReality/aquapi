blueprint:
  name: Aquarium - Dosing Automation for Script
  description: Activate a script that activates Doser Equipment when a switch is turned
    on from off, with a max time to prevent overdosing. Intended to be used with the
    script [Aquarium Dosing - Volume](https://community.home-assistant.io/t/aquarium-turn-on-a-switch-to-activate-doser-equipment-for-a-certain-amount-of-volume-or-time/600546).
    (v1.3.4) [Automation]
  domain: automation
  source_url: https://github.com/TheRealFalseReality/aquapi/blob/main/blueprints/automation/TheRealFalseReality/aquarium_dosing_volume_automation.yaml
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed
      default: []
      selector:
        condition: {}
    doseScript:
      name: Doser Script(s)
      description: Script that activates the Doser Equipment.
      selector:
        entity:
          domain:
          - script
          multiple: false
    doseSwitch:
      name: Doser Switch
      description: Switch that activates the Doser Equipment. **Use the same switch
        the selected script above uses**. Make a Group Helper switch for multiple
        switches.
      selector:
        entity:
          domain:
          - switch
          multiple: false
    doseTime_max:
      name: Dose Max Time
      description: 'Max time for the doser to be on, will automatically turn off Doser
        Switch after the set time has passed. Prevents Doser from overdosing. (Default:
        1hr)'
      default:
        hours: 1
      selector:
        duration: {}
    doseTime_max_1:
      name: Dose Max Time Fallback
      description: 'Max time for the doser to be on, will automatically turn off Doser
        Switch after the set time has passed. Prevents Doser from overdosing in case
        the first trigger fails. (Default: 6hrs)'
      default:
        hours: 6
      selector:
        duration: {}
    doseTime_max_1:
      name: Dose Max Time Failsafe
      description: 'Max time for the doser to be on, will automatically turn off Doser
        Switch after the set time has passed. Prevents Doser from overdosing in case
        the first and second trigger fails. (Default: 12hrs)'
      default:
        hours: 12
      selector:
        duration: {}
    additional_actions:
      name: Additional Actions
      description: 'Add additional actions to the script. Will execute before everything
        else, each time the automation is triggered successfully. Variables: condition,
        doseName, condition, doseSwitch, doseTime_max, additional_actions.'
      default: []
      selector:
        action: {}
trigger:
- platform: state
  entity_id: !input doseSwitch
  from: 'off'
  to: 'on'
  id: trigger_on
- platform: state
  entity_id: !input doseSwitch
  from: unknown
  to: 'on'
- platform: state
  entity_id: !input doseSwitch
  from: unavailable
  to: 'on'
- platform: state
  entity_id: !input doseSwitch
  to: 'off'
- platform: state
  entity_id: !input doseSwitch
  to: 'on'
  for: !input doseTime_max
  id: max_time
- platform: state
  entity_id: !input doseSwitch
  to: 'on'
  for: !input doseTime_max_1
  id: max_time
- platform: state
  entity_id: !input doseSwitch
  to: 'on'
  for: !input doseTime_max_1
  id: max_time
variables:
  condition: !input condition
  doseScript: !input doseScript
  doseSwitch: !input doseSwitch
  doseTime_max: !input doseTime_max
  doseTime_max_1: !input doseTime_max_1
  doseTime_max_1: !input doseTime_max_1
  doseName: '{{ states[doseSwitch].name }}'
  notify_title_fail: Dosing Stopped or Cancelled
  notify_message_fail: Dosing of {{ doseName }} has stopped or been cancelled.
  additional_actions: !input additional_actions
  notify_message_fail_max: "Dose Time Exceeded for {{ doseName }}. Switch should have been switched Off to prevent overdosing."
  notify_title_fail_max: "Dose Time Exceeded"
action:
- if:
  - condition: !input condition
  then:
  - choose:
    - conditions:
      - condition: trigger
        id: max_time
      sequence:
      - service: switch.turn_off
        metadata: {}
        data: {}
        entity_id: !input doseSwitch
      - service: notify.persistent_notification
        data:
          message: '{{ notify_message_fail_max }}'
          title: '{{ notify_title_fail_max }}'
    default:
    - choose: []
      default: !input additional_actions
    - if:
      - condition: state
        entity_id: !input doseScript
        state: "off"
      then:
      - service: script.turn_on
        metadata: {}
        data: {}
        entity_id: !input doseScript
  else:
  - if:
    - condition: template
      value_template: '{{ notify }}'
    then:
    - service: notify.persistent_notification
      data:
        message: '{{ notify_message_fail }}'
        title: '{{ notify_title_fail }}'
mode: restart
