blueprint:
  name: 'Aquarium - AquaPi: Toggle Switches Based on Water Level'
  description: This automation blueprint will turn devices on or off when water level
    is high or low. (v1.21) [Automation]
  domain: automation
  source_url: https://gist.github.com/TheRealFalseReality/6a764c0904067d44ca45e8e59a3d8747
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed
      default: []
      selector:
        condition: {}
    sensor:
      name: Water Level Sensor
      description: The AquaPi sensor that detects water level
      selector:
        entity:
          domain:
          - sensor
          multiple: false
    switchHighOff:
      name: High Switch OFF
      description: Switch(es) to turn OFF when Water Level is High
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchHighOn:
      name: High Switch ON
      description: Switch(es) to turn ON when Water Level is High
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchNormalOff:
      name: Normal Switch OFF
      description: Switch(es) to turn OFF when Water Level is Normal
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchNormalOn:
      name: Normal Switch ON
      description: Switch(es) to turn ON when Water Level is Normal
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchLowOff:
      name: Low Switch OFF
      description: Switch(es) to turn OFF when Water Level is Low
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    switchLowOn:
      name: Low Switch ON
      description: Switch(es) to turn ON when Water Level is Low
      default: []
      selector:
        entity:
          domain:
          - switch
          multiple: true
    delayHigh:
      name: Delay when High (Optional)
      description: Wait before toggling devices
      default: 0
      selector:
        duration:
          enable_day: true
    delayNormal:
      name: Delay when Normal (Optional)
      description: Wait before toggling devices
      default: 0
      selector:
        duration:
          enable_day: true
    delayLow:
      name: Delay when Low (Optional)
      description: Wait before toggling devices
      default: 0
      selector:
        duration:
          enable_day: true
    additional_actions:
      name: Additional Action(s)
      description: Add additional actions to the script if wanted. Will execute before
        everything else.
      default: []
      selector:
        action: {}
variables:
  sensor: !input sensor
  condition: !input condition
  additional_actions: !input additional_actions
  switchHighOff: !input switchHighOff
  switchHighOn: !input switchHighOn
  switchLowOff: !input switchLowOff
  switchLowOn: !input switchLowOn
  switchNormalOff: !input switchNormalOff
  switchNormalOn: !input switchNormalOn
  delayHigh: !input delayHigh
  delayLow: !input delayLow
  delayNormal: !input delayNormal
trigger:
- platform: state
  entity_id: !input sensor
  for: !input delayHigh
  from: Normal
  to: High
- platform: state
  entity_id: !input sensor
  for: !input delayNormal
  from: Low
  to: Normal
- platform: state
  entity_id: !input sensor
  for: !input delayNormal
  from: High
  to: Normal
- platform: state
  entity_id: !input sensor
  for: !input delayLow
  from: Normal
  to: Low
action:
- if:
  - condition: !input condition
  then:
  - choose: []
    default: !input additional_actions
  - if:
    - condition: state
      entity_id: !input sensor
      state: High
    then:
    - service: switch.turn_off
      entity_id: !input switchHighOff
    - service: switch.turn_on
      entity_id: !input switchHighOn
  - if:
    - condition: state
      entity_id: !input sensor
      state: Normal
    then:
    - service: switch.turn_off
      entity_id: !input switchNormalOff
    - service: switch.turn_on
      entity_id: !input switchNormalOn
  - if:
    - condition: state
      entity_id: !input sensor
      state: Low
    then:
    - service: switch.turn_off
      entity_id: !input switchLowOff
    - service: switch.turn_on
      entity_id: !input switchLowOn
mode: restart
