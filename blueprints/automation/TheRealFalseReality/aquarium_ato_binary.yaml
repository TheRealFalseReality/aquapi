blueprint:
  name: Aquarium - ATO Automation
  description: Create an ATO (Automated-Top-Off) Automation. Turn on Water Pump when
    binary sensor is off, and stop when binary sensor is on. [More Info](https://community.home-assistant.io/t/aquarium-create-ato-automation-control-switches-based-off-a-sensor/600941)
    (v1.8.1) [Automation]
  domain: automation
  source_url: https://github.com/TheRealFalseReality/aquapi/blob/main/blueprints/automation/TheRealFalseReality/aquarium_ato_binary.yaml
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed
      default: []
      selector:
        condition: {}
    sensor:
      name: Binary Sensor
      description: Binary sensor used to detect water level.
      selector:
        entity:
          domain:
          - binary_sensor
          multiple: false
    switch:
      name: Water Pump
      description: Switch to turn on Water Pump to refill to normal level.
      selector:
        entity:
          filter:
          - domain:
            - switch
          multiple: false
    delay_on:
      name: On Delay
      description: Water Pump on delay.
      default:
        seconds: 30
      selector:
        duration: {}
    normal_time:
      name: Normal Off Delay
      description: Time delay when water level is Normal to turn off pump, helps prevent
        frequent refills.
      default:
        seconds: 30
      selector:
        duration: {}
    stop_timer:
      name: Stop Automation
      description: "Stop Automation for duration when Max Time is exceeded. (default: 6 hours)"
      default: 
        hours: 6
      selector:
        duration:
          enable_day: true  
    pump_max_time:
      name: Water Pump Max On Time
      description: Turn off water pump if exceeds a certain time to prevent over-flow
        (default = 10min).
      default:
        minutes: 10
      selector:
        duration: {}
    pump_max_time_1:
      name: Water Pump Max On Time Fallback
      description: Turn off water pump if exceeds a certain time to prevent over-flow
        if the first trigger failed (default = 30mins).
      default:
        minutes: 30
      selector:
        duration: {}
    pump_max_time_2:
      name: Water Pump Max On Time Failsafe
      description: Turn off water pump if exceeds a certain time to prevent over-flow
        if the first and second trigger failed (default = 1hrs).
      default:
        hours: 1
      selector:
        duration: {}
    additional_actions:
      name: Additional Actions
      description: Add additional actions to the script. Will execute before everything
        else, each time the automation is triggered.
      default: []
      selector:
        action: {}
    additional_actions_end:
      name: Additional Actions End
      description: Add additional actions to the script. Will execute before everything
        else, each time the automation is triggered.
      default: []
      selector:
        action: {}
variables:
  condition: !input condition
  sensor: !input sensor
  switch: !input switch
  delay_on: !input delay_on
  normal_time: !input normal_time
  pump_max_time: !input pump_max_time
  pump_max_time_1: !input pump_max_time_1
  pump_max_time_2: !input pump_max_time_2
  additional_actions: !input additional_actions
  additional_actions_end: !input additional_actions_end
  stop_timer: !input stop_timer
alias: Aquarium ATO Binary
description: Control ATO pump with binary sensor.
trigger:
- platform: state
  entity_id: !input sensor
  for: !input delay_on
  to: 'off'
  alias: When Water Level is Low
- platform: state
  entity_id: !input sensor
  for: !input normal_time
  to: 'on'
  alias: When Water Level is Normal
- platform: state
  entity_id: !input switch
  to: 'on'
  for: !input pump_max_time
- platform: state
  entity_id: !input switch
  to: 'on'
  for: !input pump_max_time_1
- platform: state
  entity_id: !input switch
  to: 'on'
  for: !input pump_max_time_2
  id: max_time
- platform: state
  entity_id: !input switch
  from: unknown
  to: 'on'
- platform: state
  entity_id: !input switch
  from: unavailable
  to: 'on'
- platform: state
  entity_id: !input sensor
  to: unavailable
- platform: state
  entity_id: !input sensor
  to: unknown
action:
- if:
  - condition: !input condition
  then:
  - choose: []
    default: !input additional_actions
  - if:
    - condition: state
      entity_id: !input sensor
      state: 'off'
    then:
    - service: switch.turn_on
      entity_id: !input switch
    - choose: []
      default: !input additional_actions_end
    else:
    - service: switch.turn_off
      entity_id: !input switch
  - if: 
    - condition: trigger
      id: max_time
    then:
      - service: notify.persistent_notification
        data:
          message: "Max Time Exceeded for ATO Pump"
          title: "Aquarium ATO"
      - service: automation.turn_off
        target:
          entity_id: "{{ this.entity_id }}"
        data:
          stop_actions: false
      - delay: !input stop_timer
      - service: automation.turn_on
        target:
          entity_id: "{{ this.entity_id }}"
mode: single
