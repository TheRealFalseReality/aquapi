blueprint:
  name: 'Aquarium - AquaPi: Water Change [Script]'
  description: 'Turn on two AquaPi EZO Pumps to simultaneously remove waste water
    (Red) and add clean water (Green) daily, in gallons.

    **Note, this script will fail if the calculated flow rate exceeds either of the
    EZO Pump''s Max Volume/Time Flow Rates.** [More Info]() (v1.0.1) [Script]'
  domain: script
  source_url: https://gist.github.com/TheRealFalseReality/d01e00f94e1b25c9b723b12757d45f58
  input:
    condition:
      name: Add Condition(s)
      description: Add conditions if needed.
      default: []
      selector:
        condition: {}
    aquarium_name:
      name: Aquarium Name
      description: Name of the Aquarium for the water change (Marine Aquarium).
      selector:
        text:
          multiple: false
          multiline: false
    pump_button:
      name: AquaPi Dose Pump for Water Change
      description: Select the **Dose Volume for Time**
        button.
      selector:
        target:
          entity:
            - domain: button
              integration: esphome
    pump_volume:
      name: AquaPi Dose Pump Volume Input for Water Change
      description: Select the **Volume to Dose** input
        number entity.
      selector:
        target:
          entity:
            - domain: number
              integration: esphome
    pump_time:
      name: AquaPi Dose Pump Time Input for Water Change
      description: Select the **Time to Dose** input
        number entity.
      selector:
        target:
          entity:
            - domain: number
              integration: esphome
    # pump_waste_button:
    #   name: AquaPi Dose Pump for Waste Water
    #   description: Select the **AquaPi DEVICENAME Pump Waste - Dose Volume for Time**
    #     button.
    #   selector:
    #     entity:
    #       filter:
    #       - domain:
    #         - button
    #         integration: esphome
    #       multiple: false
    # pump_waste_volume:
    #   name: AquaPi Dose Pump Volume Input for Waste Water
    #   description: Select the **AquaPi DEVICENAME Pump Waste - Volume to Dose** input
    #     number entity.
    #   selector:
    #     entity:
    #       filter:
    #       - domain:
    #         - number
    #         integration: esphome
    #       multiple: false
    # pump_waste_time:
    #   name: AquaPi Dose Pump Time Input for Waste Water
    #   description: Select the **AquaPi DEVICENAME Pump Waste - Time to Dose** input
    #     number entity.
    #   selector:
    #     entity:
    #       filter:
    #       - domain:
    #         - number
    #         integration: esphome
    #       multiple: false
    # pump_clean_button:
    #   name: AquaPi Dose Pump for Clean Water
    #   description: Select the **AquaPi DEVICENAME Pump Clean - Dose Volume for Time**
    #     button.
    #   selector:
    #     entity:
    #       filter:
    #       - domain:
    #         - button
    #         integration: esphome
    #       multiple: false
    # pump_clean_volume:
    #   name: AquaPi Dose Pump Volume Input for Clean Water
    #   description: Select the **AquaPi DEVICENAME Pump Clean - Volume to Dose** input
    #     number entity.
    #   selector:
    #     entity:
    #       filter:
    #       - domain:
    #         - number
    #         integration: esphome
    #       multiple: false
    # pump_clean_time:
    #   name: AquaPi Dose Pump Time Input for Clean Water
    #   description: Select the **AquaPi DEVICENAME Pump Clean - Time to Dose** input
    #     number entity.
    #   selector:
    #     entity:
    #       filter:
    #       - domain:
    #         - number
    #         integration: esphome
    #       multiple: false
    change_volume_monthly:
      name: Water Change Volume Montly
      description: "Volume to change every month. Max: 100 gallons.\n Recommended
        10 - 15% monthly water change.\n ***Example: 120 gallon aquarium at 10% water
        change every month. 120gal x 0.10 = 12gal a month.***"
      selector:
        number:
          min: 0.1
          max: 100.0
          step: 0.1
          unit_of_measurement: gal
          mode: box
    change_time:
      name: Water Change Over Time
      description: Change the water amount over this time in hours every day.
      default: 8
      selector:
        number:
          min: 0.5
          max: 23.0
          step: 0.5
          unit_of_measurement: hours
          mode: slider
    notify:
      name: Persistent Notification
      description: Notify Home Assistant when script is executed.
      default: true
      selector:
        boolean: {}
    additional_actions:
      name: Additional Actions
      description: "Add additional actions to the script. Will execute before everything
        else.\n- Example: To send to Mobile Device using the official Home Assistant
        App:\n\n  Notifications -> Send a notification via mobile.YOUR_DEVICE_NAME\n
        \ ```\n  service: notify.YOUR_DEVICE_NAME\n  metadata: {}\n  data:\n    message:
        \"{{ message }}\"\n    title: \"{{ title }}\"\n  ```\n\n  Copy {{ message
        }} into `message`. This will switch to \"yaml\" mode. Above is a completed
        example.\n"
      default: []
      selector:
        action: {}
variables:
  condition: !input condition
  pump_button: !input pump_button
  pump_volume: !input pump_volume
  pump_time: !input pump_time
  # pump_waste_button: !input pump_waste_button
  # pump_clean_button: !input pump_clean_button
  # pump_clean_volume: !input pump_clean_volume
  # pump_waste_volume: !input pump_waste_volume
  # pump_clean_time: !input pump_clean_time
  # pump_waste_time: !input pump_waste_time
  change_time: !input change_time
  change_volume_monthly: !input change_volume_monthly
  change_volume: '{{ (change_volume_monthly * 3) / 91 }}'
  aquarium_name: !input aquarium_name
  additional_actions: !input additional_actions
  notify: !input notify
  calculated_time: '{{ change_time * 60 }}'
  calculated_volume: '{{ change_volume * 3785.41 }}'
  calculated_flow_rate: '{{ change_volume / change_time }}'
  calculated_flow_rate_metric: '{{ calculated_volume / calculated_time }}'
  title: '{{ aquarium_name }} Water Change'
  message: 'Changing {{ change_volume | float | round(2, default=2) }} gal of {{ aquarium_name
    }} water for {{ change_time }} hours at {{ calculated_flow_rate | float | round(2,
    default=2) }} gal/hr ({{ calculated_flow_rate_metric | float | round(2, default=2)}}
    mL/min). Monthly Water Change Amount: {{ change_volume_monthly }} gallons.'
  title_fail: '{{ aquarium_name }} Water Change Failed'
  message_fail: "Failed to dose {{ aquarium_name }} due to conditions not passing.\n
    Conditions: {{ condition }}"
  title_fail_rate: '{{ aquarium_name }} Water Change Failed'
  message_fail_rate: "The measured flow rate of {{ calculated_flow_rate_metric | float
    | round(2, default=2)}} mL/min exceeds the typical rate of 50 mL/min. To ensure
      accuracy, the automation process may be halted."
sequence:
- if:
  - condition: !input condition
  then:
  - choose: []
    default: !input additional_actions
  - service: number.set_value
    target: !input pump_volume
    data:
      value: '{{ calculated_volume }}'
  - service: number.set_value
    target: !input pump_time
    data:
      value: '{{ calculated_time }}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 100
  - service: button.press
    metadata: {}
    data: {}
    target: !input pump_button
  - if:
    - condition: template
      value_template: '{{ notify }}'
    then:
    - service: notify.persistent_notification
      data:
        message: '{{ message }}'
        title: '{{ title }}'
    - if:
      - condition: template
        value_template: '{{ calculated_flow_rate_metric > 50 }}'
      then:
      - service: notify.persistent_notification
        data:
          message: '{{ message_fail_rate }}'
          title: '{{ title_fail_rate }}'
  else:
  - if:
    - condition: template
      value_template: '{{ notify }}'
    then:
    - service: notify.persistent_notification
      data:
        message: '{{ message_fail }}'
        title: '{{ title_fail }}'
mode: single
